{"ast":null,"code":"var _jsxFileName = \"/Users/karllarkzs/Desktop/practice/weather-app/src/pages/weatherScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport axios from 'axios';\nimport { useSearchParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction WeatherScreen() {\n  _s();\n  const [searchParams] = useSearchParams();\n  const fetchingWeather = () => {\n    const city = searchParams.get('city');\n    axios.get(`https://api.openweathermap.org/data/2.5/forecast/daily?q=${city}&cnt=1&appid=${process.env.REACT_API_KEY}`).then(function (response) {\n      // handle success\n      console.log(response);\n    }).catch(function (error) {\n      // handle error\n      console.log(error);\n    }).finally(function () {\n      // always executed\n    });\n  };\n  useEffect(() => {\n    fetchingWeather();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"weather screen\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(WeatherScreen, \"Vr8ywHSj7XLtnLkrJxRpkjH85wI=\", false, function () {\n  return [useSearchParams];\n});\n_c = WeatherScreen;\nexport default WeatherScreen;\nvar _c;\n$RefreshReg$(_c, \"WeatherScreen\");","map":{"version":3,"names":["React","useEffect","axios","useSearchParams","jsxDEV","_jsxDEV","Fragment","_Fragment","WeatherScreen","_s","searchParams","fetchingWeather","city","get","process","env","REACT_API_KEY","then","response","console","log","catch","error","finally","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/karllarkzs/Desktop/practice/weather-app/src/pages/weatherScreen.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport axios from 'axios';\nimport { useSearchParams } from 'react-router-dom';\n\nfunction WeatherScreen() {\n  const [searchParams] = useSearchParams();\n\n  const fetchingWeather = () => {\n    const city = searchParams.get('city');\n    axios\n      .get(\n        `https://api.openweathermap.org/data/2.5/forecast/daily?q=${city}&cnt=1&appid=${process.env.REACT_API_KEY}`\n      )\n      .then(function (response) {\n        // handle success\n        console.log(response);\n      })\n      .catch(function (error) {\n        // handle error\n        console.log(error);\n      })\n      .finally(function () {\n        // always executed\n      });\n  };\n\n  useEffect(() => {\n    fetchingWeather();\n  }, []);\n\n  return (\n    <>\n      <h1>weather screen</h1>\n    </>\n  );\n}\n\nexport default WeatherScreen;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,eAAe,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEnD,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAM,CAACC,YAAY,CAAC,GAAGP,eAAe,EAAE;EAExC,MAAMQ,eAAe,GAAGA,CAAA,KAAM;IAC5B,MAAMC,IAAI,GAAGF,YAAY,CAACG,GAAG,CAAC,MAAM,CAAC;IACrCX,KAAK,CACFW,GAAG,CACD,4DAA2DD,IAAK,gBAAeE,OAAO,CAACC,GAAG,CAACC,aAAc,EAAC,CAC5G,CACAC,IAAI,CAAC,UAAUC,QAAQ,EAAE;MACxB;MACAC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;IACvB,CAAC,CAAC,CACDG,KAAK,CAAC,UAAUC,KAAK,EAAE;MACtB;MACAH,OAAO,CAACC,GAAG,CAACE,KAAK,CAAC;IACpB,CAAC,CAAC,CACDC,OAAO,CAAC,YAAY;MACnB;IAAA,CACD,CAAC;EACN,CAAC;EAEDtB,SAAS,CAAC,MAAM;IACdU,eAAe,EAAE;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEN,OAAA,CAAAE,SAAA;IAAAiB,QAAA,eACEnB,OAAA;MAAAmB,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAK,iBACtB;AAEP;AAACnB,EAAA,CA/BQD,aAAa;EAAA,QACGL,eAAe;AAAA;AAAA0B,EAAA,GAD/BrB,aAAa;AAiCtB,eAAeA,aAAa;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}